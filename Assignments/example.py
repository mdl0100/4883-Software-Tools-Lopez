"""
Marcos Lopez
CMPS 5323 Program 1
Reads in a .txt file containing an adjaceny matrix 
And writes a .dot file to create a graph using graphviz
"""

import numpy as np 

# openFileRead() Opens a file from user input as our input .txt file
def openFileRead():
    print("Enter the input file name. File must already exist. ")
    fname = input()
    try:
        inf = open(fname) 
        return inf
    except:
        print("Could not open file.")
        print("Check file name and location.")
        exit()

#OpenFileWrite() creates our output file
def openFileWrite():
    print("Enter the output file name. ")
    print("Caution:  If this file already exists, all")
    print("contents will be deleted.")
    fname = input()
    out = open(fname, 'w') # Can also hardcode file name here
    return out

# adjmatrix() takes in the .txt file and 
# returns the adjacenty matrix as a numpy 2D array
def adjmatrix(fname):
    #  clean .txt file
    lines = fname.readlines()                       # Read in lines from .txt as string
    lines_strip = []
    for idx in range(len(lines)):
        line = "".join(lines[idx].split())          # Strip white spaces and line returns
        if (len(line) != 0 and len(line) != 1):     # Ignore lines not part of matrix 
            lines_strip.append(line)                # Lines cleaned, but still strings
    # generate matrix
    adj_mat = []
    for row in lines_strip:                         # Create empty array for matrix
        temp_row =[]
        for numb in row:                            # Strings are iterable
            temp_row.append(int(numb))              # Convert each digit to int
        adj_mat.append(temp_row)                    # Add new row to matrix

    return np.array(adj_mat)                        # Convert to numpy 2D array (matrix)

# is_symmetric() returns True if input matrix is symmmetric
# and false if input matrix is asymmetric
def is_symmetric(matrix):
    return np.array_equal(matrix, matrix.transpose())



"""
write_dot() takes in an adjaceny matrix
A bool sym that flags if the matrix is symmetric
and the output file that will be written to
outputs .dot file 
"""
def write_dot(adj_mat, sym, output):
    # file header
    output.write("// Marcos Lopez\n// CMPS 5323\n// Autogenerated .dot file for GraphViz\n\n")
    size = adj_mat.shape[0]                 # number of rows in matrix
    if (sym):                               # symmetric matrix will generate graph
        graph_type = "graph g {\n"          # and undirected edges
        edge = "--"
        
    else:
        graph_type = "digraph g {\n"        # asymmetric matrix will generate digraph
        edge = " -> "                       # and directed edges

    output.write(graph_type)                # graph/digraph
 
    for i in range(size):                   # Check every row
        if(sym):
            stop = i                        # Only cycle through lower triangle if symmetric
        else:
            stop = size                     # Cycle through whole matrix if asymmetric
        
        for j in range(stop):
            if (adj_mat[i,j] != 0):
                output.write("\t" + str(i) + edge + str(j) + "\n")
    output.write("}")                       
    return

def main():

    fname = openFileRead()                  # Open input .txt file to read
    oname = openFileWrite()                 # Open output .dot file to write
    adj_mat = adjmatrix(fname)              # Create Adjaceny matrix
    symmetric = is_symmetric(adj_mat)       # Test its symmetric for graph/digraph
    write_dot(adj_mat, symmetric, oname)    # Write .dot file
    fname.close()                           # Close input file
    oname.close()                           # Close output file

main()